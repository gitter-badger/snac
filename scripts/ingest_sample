#!/usr/bin/env php
<?php
/**
 * Bulk ingest of files given on standard input
 * 
 * @author Robbie Hott
 * @license http://opensource.org/licenses/BSD-3-Clause BSD 3-Clause
 * @copyright 2015 the Rector and Visitors of the University of Virginia, and
 *            the Regents of the University of California
 */
// Include the global autoloader generated by composer
include "../vendor/autoload.php";

// Set STDIN to not block, so that we can give an error message if needed
stream_set_blocking(STDIN, 0);

// Did we parse a file?
$parsedFile = false;

$dbu = new snac\server\database\DBUtil();

list($appUserID, $role) = $dbu->getAppUserInfo('system');
printf("appUserID: %s role: %s\n", $appUserID, $role);

$limit = 100;

if (is_dir($argv[1])) {
    printf("Opening dir: $argv[1]\n");
    $dh = opendir($argv[1]);
    printf("Done.\n");
    $xx = 0;
    
    // Create new parser 
    $e = new \snac\util\EACCPFParser();
    $e->setConstellationOperation("insert");
    
    while (($short_file = readdir($dh)) && $xx++ <= $limit + 1) {
        
        if ($short_file == '.' or $short_file == '..') {
            continue;
        }
        
        // Create a full path file name
        $filename = $argv[1]."/$short_file";

        $parsedFile = true;

        // Print out a message stating that this file is being parsed
        echo "Parsing: $filename\n";

        $constellation = $e->parseFile($filename);
        
        // Write the constellations to the DB
        $written = $dbu->writeConstellation($constellation, "bulk ingest of merged");
        
        // Update them to be published
        $dbu->writeConstellationStatus($written->getID(), "published");
    }

    // Write some large test samples as published (too big to edit now) 
    // Washington
    echo "Parsing: George Washington\n";
    $constellation = $e->parseFile($argv[1]."/99166-w6028ps4.xml");
    $written = $dbu->writeConstellation($constellation, "bulk ingest of merged");
    // Update them to be published
    $dbu->writeConstellationStatus($written->getID(), "published");

    // Jefferson
    echo "Parsing: Thomas Jefferson\n";
    $constellation = $e->parseFile($argv[1]."/99166-w6w9576g.xml");
    $written = $dbu->writeConstellation($constellation, "bulk ingest of merged");
    // Update them to be published
    $dbu->writeConstellationStatus($written->getID(), "published");

    // Oppenheimer
    echo "Parsing: Robert Oppenheimer\n";
    $constellation = $e->parseFile($argv[1]."/99166-w6v1266v.xml");
    $written = $dbu->writeConstellation($constellation, "bulk ingest of merged");
    // Update them to be published
    $dbu->writeConstellationStatus($written->getID(), "published");

    // Joseph Henry (large record) 
    echo "Parsing: Joseph Henry\n";
    $constellation = $e->parseFile($argv[1]."/99166-w6st7qq0.xml");
    $written = $dbu->writeConstellation($constellation, "bulk ingest of merged");
    // Update them to be published
    $dbu->writeConstellationStatus($written->getID(), "published");

    //Now, write samples to edit
    echo "Parsing: Sparse other sample files .";
    $constellation = $e->parseFile($argv[1]."/99166-w6988j92.xml");
    $written = $dbu->writeConstellation($constellation, "bulk ingest of merged");
    echo ".";
    $constellation = $e->parseFile($argv[1]."/99166-w69b3nm4.xml");
    $written = $dbu->writeConstellation($constellation, "bulk ingest of merged");
    echo ".";
    $constellation = $e->parseFile($argv[1]."/99166-w6ck24z2.xml");
    $written = $dbu->writeConstellation($constellation, "bulk ingest of merged");
    echo ".";
    $constellation = $e->parseFile($argv[1]."/99166-w61z46b8.xml");
    $written = $dbu->writeConstellation($constellation, "bulk ingest of merged");
    echo ".\n";
    $constellation = $e->parseFile($argv[1]."/99166-w66182x0.xml");
    $written = $dbu->writeConstellation($constellation, "bulk ingest of merged");
    
    echo "Parsing: SNAC Sample test file (from db test)\n";
    $constellation = $e->parseFile("../test/snac/server/database/test_record.xml");
    $written = $dbu->writeConstellation($constellation, "bulk ingest of merged");

    echo "\nCompleted input of sample data.\n\n"; 
    
}

// If no file was parsed, then print the output that something went wrong
if ($parsedFile == false) {
    echo "No files in directory\n\n"
        . "Reads files from the snac merged cpf directory (1st argument),\n"
        . "then parses the files into Identity Constellations and adds them\n"
        . "to the database using standard DBUtil calls (as if it were the server).\n"
        . "Sample usage: ./ingest_sample.php /path/to/directory\n\n";
}

