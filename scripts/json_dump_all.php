#!/usr/bin/env php
<?php
/**
 * Dump all constellations as JSON. This is a one-off.
 *
 *
 * License:
 *
 * @author Tom Laudeman
 * @license http://opensource.org/licenses/BSD-3-Clause BSD 3-Clause
 * @copyright 2016 the Rector and Visitors of the University of Virginia, and
 *            the Regents of the University of California
 */

/**
 * JSON dump of all constellations in db, used at the end of May 2016 to create a sample JSON file for a
 * bibliographic interchange seminar.
 *
 * Run via this command from the root dir of the repo:
 *
 * ./scripts/json_dump_all.php > snac.json 2> json.log &
 *
 * Two files are generated. The scripts takes a while to run.
 * 
 * @author Tom Laudeman
 */

// Include the global autoloader generated by composer
include "vendor/autoload.php";

use \Monolog\Logger;
use \Monolog\Handler\StreamHandler;

// Set up the global log stream
$log = new StreamHandler(\snac\Config::$LOG_DIR . \snac\Config::$SERVER_LOGFILE, Logger::DEBUG);

// Disable blocking stdout. Not quite the same as unbuffering.
stream_set_blocking(STDOUT, 0);

$dbu = new snac\server\database\DBUtil();
$dbuser = new snac\server\database\DBUser();

/**
 * @var \Monolog\Logger $logger the logger for this server
 *
 * See enableLogging() in this file.
 */
$logger = null;

/*
 * Some of this initialization code is boileplate, pulled from other scripts. It may not be necessary.
 */
$testUser = new \snac\data\User();
$testUser->setUserName("testing@localhost");
$user = $dbuser->readUser($testUser);
$icIDList = $dbu->sqlObj()->selectAllConstellationID();

$allCons = array();
$xx = 0;
foreach($icIDList as $icID)
{
    error_log(sprintf("Working on $icID"));
    $cObj = $dbu->readConstellation($icID);
    array_push($allCons, $cObj->toArray(true));
    /* 
     * $xx++;
     * if ($xx > 1)
     * {
     *     break;
     * }
     */
}

printf("%s\n", json_encode($allCons, JSON_PRETTY_PRINT));
