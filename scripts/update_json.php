#!/usr/bin/env php
<?php
/**
 * Create up to date versions of two files critical to testing. You must manually overwrite the old file with
 * the new after running this script.
 *
 * @author Robbie Hott 
 * @author Tom Laudeman
 * @license http://opensource.org/licenses/BSD-3-Clause BSD 3-Clause
 * @copyright 2015 the Rector and Visitors of the University of Virginia, and
 *            the Regents of the University of California
 */

// Include the global autoloader generated by composer
include "vendor/autoload.php";
use \Monolog\Logger;
use \Monolog\Handler\StreamHandler;

// Set up the global log stream
$log = new StreamHandler(\snac\Config::$LOG_DIR . \snac\Config::$SERVER_LOGFILE, Logger::DEBUG);


/* unbuffer stdin, stdout? Or something. */
stream_set_blocking(STDIN, 0);
stream_set_blocking(STDOUT, 0);


/* 
 * We cannot build the new from the old if the data structures change!
 * $jsonIn = file_get_contents("test/snac/data/json/constellation_test.json");
 * $identity->fromJSON($jsonIn);
 */
printf("Starting...\n");
$e = new \snac\util\EACCPFParser();
printf("Parser ready\n");


/*
 * Parse the FRAN data from the test suite
 */
$inFile = "test/snac/util/eac-cpf/FRAN_NP_050744.xml";
printf("Reading $inFile...\n");
$identity = $e->parseFile($inFile);
file_put_contents("test/snac/data/json/constellation_test_v2_fromxml.json", $identity->toJSON(false));
printf("Wrote: test/snac/data/json/constellation_test_v2_fromxml.json\n");

$identity = new \snac\data\Constellation();
$jsonIn = file_get_contents("test/snac/data/json/constellation_test_v2_fromxml.json");
$identity->fromJSON($jsonIn);
file_put_contents("test/snac/data/json/constellation_test_v2_fromjson.json", $identity->toJSON(false));

/*
 * Parse Thomas Jefferson's EAC-CPF from the internet
 */
$inFile = "http://socialarchive.iath.virginia.edu/snac/data/99166-w6w9576g.xml";
$outFile = "test/snac/data/json/constellation_test2_v2_fromxml.json";
printf("Reading: $inFile\n");
$identity = $e->parseFile($inFile);
file_put_contents($outFile, $identity->toJSON(false));
printf("Wrote: $outFile\n");

$identity = new \snac\data\Constellation();
$inFile = "test/snac/data/json/constellation_test2_v2_fromxml.json";
$outFile = "test/snac/data/json/constellation_test2_v2_fromjson.json";
printf("Reading: $inFile\n");
$jsonIn = file_get_contents($inFile);
$identity->fromJSON($jsonIn);
file_put_contents($outFile, $identity->toJSON(false));
printf("Wrote: $outFile\n");

printf("WARNING: test/snac/data/json/constellation_simple.json cannot be automatically updated.\n");
