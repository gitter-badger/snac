#!/usr/bin/env php
<?php
/**
 * Bulk ingest of users from a csv file 
 *
 * 
 * @author Robbie Hott
 * @license http://opensource.org/licenses/BSD-3-Clause BSD 3-Clause
 * @copyright 2015 the Rector and Visitors of the University of Virginia, and
 *            the Regents of the University of California
 */
// Include the global autoloader generated by composer
include "../vendor/autoload.php";

use \Monolog\Logger;
use \Monolog\Handler\StreamHandler;

// Set up the global log stream
$log = new StreamHandler(\snac\Config::$LOG_DIR . \snac\Config::$SERVER_LOGFILE, Logger::DEBUG);


// Did we parse a file?
$parsedFile = false;

// SNAC Postgres DB Handler
$cStore = new \snac\server\database\DBUtil();
$uStore = new \snac\server\database\DBUser();

$unRoles = $uStore->listRoles();

$roles = array();
foreach($unRoles as $role) {
    $roles[$role->getLabel()] = $role;
}

$institutions = array(); 

/*
 * fgetcsv field enclosure is "" not ''. If you use '' the single quotes will be retained as part of the data.
 */ 
if (($handle = fopen($argv[1], "r")) !== FALSE) {
    while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
        $institutions[$data[1]] = $data[0];
    }
    fclose($handle);
}

$row = 0;
if (($handle = fopen($argv[2], "r")) !== FALSE) {
    while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
        if (count($data) != 4)
        {
            throw new \snac\exceptions\SNACException(
                sprintf("Expecting 4 columns in user csv file. Found %s columns in file %s",
                        count($data),
                        $argv[2]));
        }
        if ($row++ > 0 && $data[2] != "") {
            $parsedFile = true;
            echo $data[0] . ", " . $data[1] . ":: " . $institutions[$data[1]] . "\n";
            $inst = $cStore->readPublishedConstellationByArk($institutions[$data[1]], true);
            $tempUser = new \snac\data\User();
            $tempUser->setUserName($data[2]);
            $tempUser->setEmail($data[2]);
            $tempUser->setFullName($data[0]);
            $tempUser->setAffiliation($inst);
            $tempUser->setUserActive(true);

            // Don't need to call both setRoleList() and addRoleToUser()
            $tempUser->setRoleList(array($roles[$data[3]]));
            $tempUser = $uStore->createUser($tempUser);

            // Don't need to call both setRoleList() and addRoleToUser()
            // $uStore->addRoleToUser($tempUser, $roles[$data[3]]);
        }
    }
    fclose($handle);
}


// If no file was parsed, then print the output that something went wrong
if ($parsedFile == false) {
    echo "No args given\n\n"
        . "Sample usage: ./add_users.php institutions.csv users.csv\n\n";
}

